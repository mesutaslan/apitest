# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    api.base_service.class: AppBundle\Service\AbstractService
    api.base_entity.class: AppBundle\Entity\AbstractEntity

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests,Service}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\Service\:
        resource: '../../src/AppBundle/Service'
        public: true
        tags: ['service.service_arguments']

# For all requests and exceptions and responses

    api.listener.kernel.request_listener:
        class: AppBundle\Listener\RequestListener
        tags:
        - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
    api.listener.kernel.exception_listener:
        class: AppBundle\Listener\ExceptionListener
        tags:
        - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
    api.listener.kernel.response_listener:
        class: AppBundle\Listener\ResponseListener
        tags:
        - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }